import { pluralize } from './utils'
import type { Translation } from '.'
import { TIMEZONE } from '~/constants'
import type { TrainingDetailed } from '~/services/sport/types'
import type { Weekday } from '~/utils/dates'
import { clockTime } from '~/utils/dates'
import { tgxFromHtml } from '~/utils/tgx-from-html'
import type { SemesterSummary } from '~/domain/types'

function dateLong(date: Date): string {
  const weekDayShort = date.toLocaleDateString('ru-RU', { weekday: 'long', timeZone: TIMEZONE })
  let month = date.toLocaleDateString('ru-RU', { month: 'numeric', timeZone: TIMEZONE })
  let dayOfMonth = date.toLocaleDateString('ru-RU', { day: 'numeric', timeZone: TIMEZONE })
  const year = date.toLocaleDateString('ru-RU', { year: 'numeric', timeZone: TIMEZONE })

  month = month.length === 1 ? `0${month}` : month
  dayOfMonth = dayOfMonth.length === 1 ? `0${dayOfMonth}` : dayOfMonth

  return `${weekDayShort}, ${dayOfMonth}.${month}.${year}`
}

function dateAndTimeShort(
  startsAt: Date,
  endsAt: Date,
): string {
  const weekDayShort = startsAt.toLocaleDateString('ru-RU', { weekday: 'long', timeZone: TIMEZONE })
  let month = startsAt.toLocaleDateString('ru-RU', { month: 'numeric', timeZone: TIMEZONE })
  let dayOfMonth = startsAt.toLocaleDateString('ru-RU', { day: 'numeric', timeZone: TIMEZONE })
  const year = startsAt.toLocaleDateString('ru-RU', { year: 'numeric', timeZone: TIMEZONE })

  month = month.length === 1 ? `0${month}` : month
  dayOfMonth = dayOfMonth.length === 1 ? `0${dayOfMonth}` : dayOfMonth

  const weekDayCapitalized = weekDayShort.charAt(0).toUpperCase() + weekDayShort.slice(1)

  return `${weekDayCapitalized}, ${dayOfMonth}.${month}.${year} –≤ ${clockTime(startsAt, TIMEZONE)}‚Äî${clockTime(endsAt, TIMEZONE)}`
}

function beautifulSemesterTitle(raw: string): string {
  const match = raw.toLowerCase().match(/^([sf]|sum)(\d{2})$/i)
  if (!match) {
    return raw
  }

  const [, season, year] = match
  const seasonName = season === 's' ? '–í–µ—Å–Ω–∞' : season === 'f' ? '–û—Å–µ–Ω—å' : '–õ–µ—Ç–æ'
  const emoji = season === 's' ? 'üå∑' : season === 'f' ? 'üçÇ' : '‚òÄÔ∏è'
  const formattedYear = `20${year}`
  return `${seasonName} ${formattedYear} ${emoji}`
}

const INSPIRING_QUOTES = [
  '–ù–µ–≤–∞–∂–Ω–æ, –∫–∞–∫ –º–µ–¥–ª–µ–Ω–Ω–æ —Ç—ã –ø—Ä–æ–¥–≤–∏–≥–∞–µ—à—å—Å—è, –≥–ª–∞–≤–Ω–æ–µ, —á—Ç–æ —Ç—ã –Ω–µ –æ—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—à—å—Å—è.',
  '–ù–µ –∏–º–µ–π 100 –¥—Ä—É–∑–µ–π, –∞ –∏–º–µ–π 100 —á–∞—Å–æ–≤.',
]

export default {
  'Bot.Commands': {
    menu: '–≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é',
    help: '–æ –±–æ—Ç–µ',
  },
  'Bot.About': '–Ø –ø–æ–º–æ–≥–∞—é —Å—Ç—É–¥–µ–Ω—Ç–∞–º –ò–Ω–Ω–æ–ø–æ–ª–∏—Å–∞ —Å–ª–µ–¥–∏—Ç—å –∑–∞ –ø—Ä–æ–≥—Ä–µ—Å—Å–æ–º –ø–æ —Å–ø–æ—Ä—Ç—É –∏ –∑–∞–ø–∏—Å—ã–≤–∞—Ç—å—Å—è –Ω–∞ –∑–∞–Ω—è—Ç–∏—è –≤ –ø–∞—Ä—É –∫–ª–∏–∫–æ–≤, –∞ –µ—â—ë –ø–æ–∫–∞–∑—ã–≤–∞—é –ª–∏—á–Ω—ã–π –∫–∞–ª–µ–Ω–¥–∞—Ä—å —Å–æ –≤—Å–µ–º–∏ –∑–∞–Ω—è—Ç–∏—è–º–∏.',
  'Bot.Bio': '–ü–æ–º–æ–≥–∞—é –∑–∞–∫—Ä—ã–≤–∞—Ç—å —Å–ø–æ—Ä—Ç —Å—Ç—É–¥–µ–Ω—Ç–∞–º –ò–Ω–Ω–æ–ø–æ–ª–∏—Å–∞.\n\ngithub.com/one-zero-eight/sport-bot',

  'Messages.WelcomeUnauthorized': (
    <>
      <b>–ü—Ä–∏–≤–µ—Ç, —è IU Sport –±–æ—Ç! üí™</b>
      <br />
      <br />
      –Ø –º–æ–≥—É –∑–∞–ø–∏—Å–∞—Ç—å —Ç–µ–±—è –Ω–∞ –∑–∞–Ω—è—Ç–∏—è, –ø–æ–∫–∞–∑–∞—Ç—å —Ç–≤–æ–π –ø—Ä–æ–≥—Ä–µ—Å—Å –∏ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫.
      <br />
      <br />
      –ù–æ –¥–ª—è –Ω–∞—á–∞–ª–∞ –º–Ω–µ –Ω—É–∂–Ω–æ, —á—Ç–æ–±—ã —Ç—ã –≤–æ—à—ë–ª –≤ —Å–≤–æ–π InNoHassle –∞–∫–∫–∞—É–Ω—Ç.
    </>
  ),
  'Messages.Help': (
    <>
      –≠—Ç–æ—Ç –±–æ—Ç –º–æ–∂–µ—Ç –∑–∞–ø–∏—Å–∞—Ç—å —Ç–µ–±—è –Ω–∞ –∑–∞–Ω—è—Ç–∏—è, –ø–æ–∫–∞–∑–∞—Ç—å —Ç–≤–æ–π –ø—Ä–æ–≥—Ä–µ—Å—Å –∏ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫.
      <br />
      <br />
      <b>–ö–æ–º–∞–Ω–¥—ã:</b>
      <br />
      /menu ‚Äî –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
      <br />
      /help ‚Äî –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ
      <br />
      <br />
      –ï—Å–ª–∏ –Ω–∞—à—ë–ª –±–∞–≥ –∏–ª–∏ –µ—Å—Ç—å —Ö–æ—Ä–æ—à–∞—è –∏–¥–µ—è, —Ç–æ –º–æ–∂–µ—à—å —Å–æ–∑–¥–∞—Ç—å issue –≤
      {' '}
      <a href="https://github.com/one-zero-eight/sport-bot">GitHub —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–∏</a>
      {' '}
      ‚Äî –ª—é–±–∞—è –ø–æ–º–æ—â—å –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤—É–µ—Ç—Å—è! –û–±—Ä–∞—Ç–Ω–æ–π —Å–≤—è–∑—å—é –º–æ–∂–Ω–æ –ø–æ–¥–µ–ª–∏—Ç—å—Å—è —Å –º—ç–π–Ω—Ç–µ–π–Ω–µ—Ä–æ–º: @evermake.
      <br />
      <br />
      <i>—Å üíú –æ—Ç @one_zero_eight</i>
    </>
  ),

  'Buttons.Back': '‚Üê –ù–∞–∑–∞–¥',
  'Buttons.LoginWithInnohassle': '–í–æ–π—Ç–∏ —á–µ—Ä–µ–∑ InNoHassle',

  'HowGoodAmI.Thinking': '–î–∞–π-–∫–∞ –ø–æ–¥—É–º–∞—é ü§î',
  'HowGoodAmI.Answer': (percent: number) => `–¢—ã –ª—É—á—à–µ ${percent}% —Å—Ç—É–¥–µ–Ω—Ç–æ–≤!`,
  'HowGoodAmI.Failed': '–Ø –Ω–µ –∑–Ω–∞—é ü§∑‚Äç‚ôÇÔ∏è',

  'Alert.CheckInSuccessfulText': '–ó–∞–ø–∏—Å—å —Å–æ–∑–¥–∞–Ω–∞.',
  'Alert.CheckInSuccessful': ({ title, startsAt, endsAt }: TrainingDetailed) => [
    '–ó–∞–ø–∏—Å—å —Å–æ–∑–¥–∞–Ω–∞.',
    '',
    title,
    dateAndTimeShort(startsAt, endsAt),
  ].join('\n'),
  'Alert.CheckInCancelledText': '–ó–∞–ø–∏—Å—å –æ—Ç–º–µ–Ω–µ–Ω–∞.',
  'Alert.CheckInCancelled': ({ title, startsAt, endsAt }: TrainingDetailed) => [
    '–ó–∞–ø–∏—Å—å –æ—Ç–º–µ–Ω–µ–Ω–∞.',
    '',
    title,
    dateAndTimeShort(startsAt, endsAt),
  ].join('\n'),
  'Alert.CheckInUnavailable': '–¢—ã –Ω–µ –º–æ–∂–µ—à—å –∑–∞–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ —ç—Ç–æ –∑–∞–Ω—è—Ç–∏–µ.',
  'Alert.AlreadyCheckedIn': '–¢—ã —É–∂–µ –∑–∞–ø–∏—Å–∞–Ω –Ω–∞ —ç—Ç–æ –∑–∞–Ω—è—Ç–∏–µ.',
  'Alert.NotCheckedIn': '–¢—ã –Ω–µ –∑–∞–ø–∏—Å–∞–Ω –Ω–∞ —ç—Ç–æ –∑–∞–Ω—è—Ç–∏–µ.',
  'Alert.CheckInError': '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –≤–æ –≤—Ä–µ–º—è –∑–∞–ø–∏—Å–∏.',
  'Alert.CancelCheckInError': '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –≤–æ –≤—Ä–µ–º—è –æ—Ç–º–µ–Ω—ã –∑–∞–ø–∏—Å–∏.',

  'Views.Main.Message': ({
    earned,
    required,
    debt,
  }: {
    earned: number // earned w/o debt
    required: number // required w/o debt
    debt: number
  }) => {
    if (earned >= required + debt) {
      return (
        <>
          <b>–¢–µ–∫—É—â–∏–π –ø—Ä–æ–≥—Ä–µ—Å—Å:</b>
          <br />
          {`üéâ ${earned} ${pluralize(earned, '—á–∞—Å', '—á–∞—Å–∞', '—á–∞—Å–æ–≤')} –∏–∑ ${required}${debt ? `+${debt} (–¥–æ–ª–≥)` : ''} üéâ`}
        </>
      )
    } else {
      return (
        <>
          <b>–¢–µ–∫—É—â–∏–π –ø—Ä–æ–≥—Ä–µ—Å—Å:</b>
          <br />
          {`${earned} ${pluralize(earned, '—á–∞—Å', '—á–∞—Å–∞', '—á–∞—Å–æ–≤')} –∏–∑ ${required}${debt ? `+${debt} (–¥–æ–ª–≥)` : ''}`}
          <br />
          <blockquote>{INSPIRING_QUOTES[Math.floor(Math.random() * INSPIRING_QUOTES.length)]}</blockquote>
        </>
      )
    }
  },
  'Views.Main.Buttons.Refresh': 'üîÑ –û–±–Ω–æ–≤–∏—Ç—å',
  'Views.Main.Buttons.Trainings': '‚õπÔ∏è –ó–∞–Ω—è—Ç–∏—è',
  'Views.Main.Buttons.Semesters': 'üìä –°–µ–º–µ—Å—Ç—Ä—ã',
  'Views.Main.Buttons.Website': 'üåê –°–∞–π—Ç',
  'Views.Main.Buttons.Calendar': 'üìÜ –ö–∞–ª–µ–Ω–¥–∞—Ä—å',
  'Views.Main.Alerts.Refreshed': '–û–±–Ω–æ–≤–ª–µ–Ω–æ!',

  'Views.TrainingsDaysList.Message': '–í—ã–±–µ—Ä–∏ –¥–∞—Ç—É:',

  'Views.DayTrainings.Message': '–í—ã–±–µ—Ä–∏ –∑–∞–Ω—è—Ç–∏–µ:',

  'Views.Training.Message': ({
    title,
    startsAt,
    endsAt,
    accredited,
    description,
    teachers,
  }: TrainingDetailed) => (
    <>
      <b>{title}</b>
      <br />
      <br />
      <b>–î–∞—Ç–∞: </b>
      {dateLong(startsAt)}
      <br />
      <b>–í—Ä–µ–º—è: </b>
      {`${clockTime(startsAt, TIMEZONE)}‚Äî${clockTime(endsAt, TIMEZONE)}`}
      <br />
      <b>–ê–∫–∫—Ä–µ–¥–∏—Ç–æ–≤–∞–Ω–æ: </b>
      {accredited ? '–¥–∞' : '–Ω–µ—Ç'}
      <br />
      {(teachers.length > 0) && (
        <>
          <br />
          <b>–¢—Ä–µ–Ω–µ—Ä—ã:</b>
          <br />
          {teachers.map(teacher => `‚Ä¢ ${teacher.firstName} ${teacher.lastName} (${teacher.email})\n`)}
        </>
      )}
      {(description.trim() && (
        <>
          <br />
          <b>–û–ø–∏—Å–∞–Ω–∏–µ:</b>
          <br />
          {tgxFromHtml(description)}
        </>
      ))}
    </>
  ),
  'Views.Training.Buttons.CheckIn': '–ó–∞–ø–∏—Å–∞—Ç—å—Å—è',
  'Views.Training.Buttons.CancelCheckIn': '–û—Ç–º–µ–Ω–∏—Ç—å –∑–∞–ø–∏—Å—å',

  'Views.SemestersSummary.SummaryMessage': (semesters: SemesterSummary[]) => (
    <>
      <b>–ò—Å—Ç–æ—Ä–∏—è —Å–µ–º–µ—Å—Ç—Ä–æ–≤</b>
      <br />
      <br />
      {semesters.map(({ title, hoursTotal, fitnessTest }) => (
        <>
          {beautifulSemesterTitle(title)}
          <br />
          {(hoursTotal != null) && (
            <>
              {`‚Ä¢ ${hoursTotal} ${pluralize(hoursTotal, '—á–∞—Å', '—á–∞—Å–∞', '—á–∞—Å–æ–≤')}`}
              <br />
            </>
          )}
          {fitnessTest && (
            <>
              {`‚Ä¢ –§–∏—Ç–Ω–µ—Å-—Ç–µ—Å—Ç: ${fitnessTest.pointsTotal} ${pluralize(fitnessTest.pointsTotal, '–±–∞–ª–ª', '–±–∞–ª–ª–∞', '–±–∞–ª–ª–æ–≤')} (${fitnessTest.passed ? '—Å–¥–∞–Ω' : '–Ω–µ —Å–¥–∞–Ω'})`}
              <br />
            </>
          )}
          <br />
        </>
      ))}
    </>
  ),

  'Weekday.TwoLetters': (weekday: Weekday) => {
    switch (weekday) {
      case 'mon': return '–ü–Ω'
      case 'tue': return '–í—Ç'
      case 'wed': return '–°—Ä'
      case 'thu': return '–ß—Ç'
      case 'fri': return '–ü—Ç'
      case 'sat': return '–°–±'
      case 'sun': return '–í—Å'
    }
  },
} satisfies Translation
